version: '3'

services:
  bridge:
    build:
      context: .
      dockerfile: ./Klever-bridge.docker
    restart: always
    healthcheck:
      test: curl --fail http://localhost:8998 || exit 1
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s
#    volumes:
#      - .:/usr/src/app
    ports:
      - 8998:8998
    depends_on:
      postgres:
        condition: service_started
      # celery:
      #   condition: service_started
      rabbitmq:
        condition: service_healthy

  task_worker:
    build:
      context: .
      target: klever-task-worker
      dockerfile: ./Klever-native-scheduler.docker
    deploy:
      mode: replicated
      replicas: 4
      resources:
        limits:
          cpus: '1.0'
          memory: 8G
    restart: always
    volumes:
     - /sys/fs/cgroup:/sys/fs/cgroup:rw
    depends_on:
      bridge:
        condition: service_healthy

  job_worker:
    build:
      context: .
      target: klever-job-worker
      dockerfile: ./Klever-native-scheduler.docker
    restart: always
    volumes:
     - /sys/fs/cgroup:/sys/fs/cgroup:rw
     - /opt/bin/build-bases/linux:/klever/build bases/linux
    depends_on:
      bridge:
        condition: service_healthy
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1.0'
    #       memory: 5G

  # controller:
  #   build:
  #     context: .
  #     dockerfile: ./Klever-controller.docker
  #   restart: on-failure
  #   container_name: controller
  #   depends_on:
  #     django:
  #       condition: service_healthy

  rabbitmq:
    image: rabbitmq:management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=service
      - RABBITMQ_DEFAULT_PASS=service
        #      - RABBITMQ_DEFAULT_VHOST=localhost
    healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 5s
        timeout: 5s
        retries: 20

  # celery:
  #   build:
  #     context: .
  #     dockerfile: ./Klever-celery.docker
  #   restart: always
  #   container_name: celery
  #   # command: [celery, worker, --app=bridge, --loglevel=INFO]
  #   environment:
  #   - CELERY_BROKER_URL=amqp://service:service@rabbitmq:5672
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
    # volumes:
    #   - ./bridge:/bridge
    # healthcheck:
    #     test: rabbitmq-diagnostics -q ping
    #     interval: 5s
    #     timeout: 5s
    #     retries: 20

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=klever
      - POSTGRES_USER=klever
      - POSTGRES_PASSWORD=klever
    # volumes:
    #   - pgdbdata:/var/lib/postgresql/data/
#
#volumes:
#  pgdbdata: null
