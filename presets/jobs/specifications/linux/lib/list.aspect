/*
 * Copyright (c) 2022 ISP RAS (http://www.ispras.ru)
 * Ivannikov Institute for System Programming of the Russian Academy of Sciences
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

before: file("$this")
{
#include <linux/types.h>
#include <ldv/linux/list.h>
}

around: execution(static inline void INIT_LIST_HEAD(struct list_head *list))
{
	ldv_init_list_head(list);
}

around: execution(static inline int list_empty(const struct list_head *head))
{
	return ldv_list_empty(head);
}

around: execution(static inline void list_add(struct list_head *new, struct list_head *head))
{
	ldv_list_add(new, head, head->next);
}

around: execution(static inline void list_add_tail(struct list_head *new, struct list_head *head))
{
	ldv_list_add(new, head->prev, head);
}

around: execution(static inline void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next))
{
	ldv_list_add(new, prev, next);
}

around: call(void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next))
{
	ldv_list_add(new, prev, next);
}

around: execution(static inline void list_del(struct list_head *entry))
{
	ldv_list_del(entry);
}

around: call(void list_del(struct list_head *entry))
{
	ldv_list_del(entry);
}

around: execution(static inline void __list_del_entry(struct list_head *entry))
{
	ldv_list_del_entry(entry->prev, entry->next);
}

around: call(void __list_del_entry(struct list_head *entry))
{
	ldv_list_del_entry(entry->prev, entry->next);
}
