/*
 * Copyright (c) 2020 ISP RAS (http://www.ispras.ru)
 * Ivannikov Institute for System Programming of the Russian Academy of Sciences
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

before: file("$this")
{
#include <ldv/linux/device.h>
}

around: call(void *devm_kmalloc(struct device *dev, size_t size, gfp_t flags))
{
	return ldv_devm_kmalloc(dev, size, flags);
}

around: call(static inline void *devm_kzalloc(struct device *dev, size_t size, gfp_t flags))
{
	return ldv_devm_kzalloc(dev, size, flags);
}

around: call(static inline void *devm_kmalloc_array(struct device *dev, size_t n, size_t size, gfp_t flags))
{
	return ldv_devm_kmalloc_array(n, size, flags);
}

around: call(static inline void *devm_kcalloc(struct device *dev, size_t n, size_t size, gfp_t flags))
{
	return ldv_devm_kcalloc(n, size, flags);
}
